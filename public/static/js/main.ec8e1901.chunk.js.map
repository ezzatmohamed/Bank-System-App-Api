{"version":3,"sources":["components/header/header.js","components/login/login.js","components/signup/signup.js","components/account/create/CreateAccount.js","components/account/update/UpdateAccount.js","components/home/account/account.js","components/home/home.js","components/transaction/transaction.js","components/transaction/transactions.js","components/transaction/new_transaction.js","auth.js","protected.route.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","redirect","logout","bind","e","preventDefault","sessionStorage","setItem","clear","this","setState","getItem","className","href","onClick","to","Component","Login","email","password","onChange","onSubmit","target","name","value","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","console","log","errors","alert","login","id","type","placeholder","Signup","CreateAccount","bank","currency","class","selected","label","disabled","UpdateAccount","parseInt","match","params","account","Account","balance","activated","activatedButton","handleActivate","handleDeactivate","Home","accounts","filter","getAllaccount","getByBank","temp","slice","map","displayAccounts","Transaction","withdraws","deposits","transfers","displayWithdraws","displayDeposits","displayTransfers","deleteTransaction","withdraw","from","deposit","transfer","Transactions","transactions","newID","getAllTransactions","newTransaction","NewId","transaction","getTransactions","displayTransactions","NewTransaction","depositTo","depositBalance","withdrawFrom","withdrawBalance","tranferFrom","transferTo","transferBalance","AddDeposit","AddWithdraw","AddTransfer","depositMoney","withdrawMoney","transferFrom","transferMoney","authnticated","cb","AuthRoute","component","rest","render","auth","isAuthenticated","NotAuthRoute","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8e1901.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './header.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {Router,Redirect } from 'react-router-dom'\r\nclass Header extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect:false\r\n          }\r\n        this.logout = this.logout.bind(this)\r\n      }\r\n      logout(e){\r\n          e.preventDefault();\r\n          sessionStorage.setItem('token','')\r\n          sessionStorage.clear() \r\n          this.setState({redirect:true})\r\n        //   console.log(this.props)\r\n      }\r\n \r\n      renderLinks(){\r\n          if(sessionStorage.getItem('token'))\r\n          {\r\n                return ( <ul>\r\n                    <li> <a className=\"selected\" href='/'>Home</a></li>\r\n                    <li><a href='/create-account'>Create Account</a></li>\r\n                    <li><a href='/transactions'>Transactions</a></li>\r\n                    <li><a href='/login' onClick={this.logout}>Logout</a></li>\r\n                </ul> )\r\n          }\r\n          else{\r\n            return (<ul>\r\n                <li><a href='/signup'>Signup</a></li>\r\n                <li><a href='/login'>Login</a></li>\r\n            </ul>)\r\n          }\r\n          \r\n      }\r\n    render(){\r\n\r\n        if(this.state.redirect )\r\n        {\r\n            return (<Redirect to='/login'/>)\r\n        }\r\n        return (\r\n            <div  className = 'header'>\r\n                 <div className = 'header-bar' >   \r\n                    <div className=\"nav-menu\">\r\n                    <ul>\r\n                    <li> <a className=\"selected\" href='/'>Home</a></li>\r\n                    <li><a href='/create-account'>Create Account</a></li>\r\n                    <li><a href='/transactions'>Transactions</a></li>\r\n                <li><a href='/signup'>Signup</a></li>\r\n                <li><a href='/login'>Login</a></li>\r\n                    <li><a href='/login' onClick={this.logout}>Logout</a></li>\r\n                </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, {Component} from 'react';\r\nimport './login.css'\r\nimport {Redirect } from 'react-router-dom'\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            email:'',\r\n            password:'',\r\n            redirect:false\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n      }\r\n\r\n      onChange(e){\r\n          this.setState({[e.target.name]:e.target.value})\r\n      }\r\n      onSubmit(e){\r\n          e.preventDefault()\r\n          \r\n          fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({query:`mutation{login(email:\"${this.state.email}\",password:\"${this.state.password}\")}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert('invalid login')\r\n                \r\n            }   \r\n            else{\r\n                console.log(data.data.login)\r\n                sessionStorage.setItem('token',data.data.login)\r\n                this.setState({\r\n                    redirect:true\r\n                })\r\n            }\r\n        });\r\n      }\r\n    render(){\r\n        if(this.state.redirect )\r\n        {\r\n            return (<Redirect to='/'/>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <div >\r\n                <div className=\"login\">    \r\n                    <form id=\"login\" onSubmit={this.onSubmit}>  \r\n                        <label><b>Email</b>  \r\n                        ~{\"\\n\"}\r\n                        </label>\r\n                        <input type=\"email\" name=\"email\" id=\"Uname\" onChange={this.onChange} placeholder=\"Email\"/>    \r\n                        {\"\\n\"}{\"\\n\"}\r\n                        <label><b>Password     </b>  \r\n                        ~{\"\\n\"}\r\n                        </label>\r\n                        <input type=\"password\" name=\"password\" id=\"Pass\"  onChange={this.onChange} placeholder=\"Password\"/>    \r\n                        {\"\\n\"}{\"\\n\"}\r\n                        <button className='select-photo c-button' id =\"login-button\">Login</button>\r\n                        <p></p>\r\n                        <a href='/signup'>OR create new account</a>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, {Component} from 'react';\r\nimport './signup.css'\r\nimport {Redirect } from 'react-router-dom'\r\nclass Signup extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n          name:'',\r\n          email:'',\r\n          password:'',\r\n          redirect:false\r\n      }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n      }\r\n      onSubmit(e){\r\n\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        fetch('/graphql', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({query:`mutation{signup(email:\"${this.state.email}\",password:\"${this.state.password}\",name:\"${this.state.name}\"){name}}`})\r\n        }\r\n      )\r\n      .then(response => response.json())\r\n      .then(data =>{\r\n          console.log(data)\r\n          if(data.errors){\r\n              console.log('error')\r\n              alert('invalid registeration')\r\n          }   \r\n          else{\r\n              console.log(data)\r\n              this.setState({\r\n                redirect:true\r\n            })\r\n          }\r\n      });\r\n    }\r\n    onChange(e){\r\n      this.setState({[e.target.name]:e.target.value})\r\n  }\r\n    render(){\r\n      if(this.state.redirect )\r\n      {\r\n          return (<Redirect to='/login'/>)\r\n      }\r\n        return (\r\n            <div >\r\n                <div className=\"login-page\">\r\n                  <div className=\"form\">\r\n                    <form className=\"login-form\"  onSubmit={this.onSubmit}>\r\n                      <input type=\"text\" name='name' onChange={this.onChange} placeholder=\"name\"/>\r\n                      <input type=\"email\" name='email' onChange={this.onChange} placeholder=\"email\"/>\r\n                      <input type=\"password\" name='password' onChange={this.onChange}  placeholder=\"password\"/>\r\n                      <button>Register</button>\r\n                        <a href='/login'>OR Login</a>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import React, {Component} from 'react';\r\nimport {Redirect } from 'react-router-dom'\r\nimport './CreateAccount.css'\r\nclass CreateAccount extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n          redirect:false,\r\n          bank:'cib',\r\n          type:'current',\r\n          currency:'USD'\r\n        }\r\n        \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n      }\r\n      onSubmit(e){\r\n        e.preventDefault()\r\n          \r\n        fetch('/graphql', {\r\n          method: \"POST\",\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify({query:`mutation{createAccount(bank:\"hsbc\",type:\"joint\",currency:\"EGP\"){id}}`})\r\n        }\r\n      )\r\n      .then(response => response.json())\r\n      .then(data =>{\r\n          console.log(data)\r\n          if(data.errors){\r\n              alert(\"error\")\r\n              \r\n          }   \r\n          else{\r\n              alert(\"success\")\r\n          }\r\n      });\r\n      }\r\n      onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n        console.log(this.state)\r\n    }\r\n    render(){\r\n        if(this.state.redirect || !sessionStorage.getItem('token'))\r\n        {\r\n            return (<Redirect to='/login'/>)\r\n        }\r\n        return (\r\n            <div >\r\n                <div class=\"login-page\">\r\n                  <div class=\"form\">\r\n\r\n                    <form class=\"login-form\"  onSubmit={this.onSubmit}>\r\n                        <p>Bank</p>\r\n                      <select onChange={this.onChange} name=\"bank\" value ={this.state.bank} id=\"bankList\">\r\n                        <option value=\"cib\" selected=\"selected\" label=\"cib\">CIB</option>\r\n                        <option value=\"qnb\" label=\"qnb\">QNB</option>\r\n                        <option value=\"hsbc\" label=\"hsbc\">HSBC</option>\r\n                      </select>\r\n                        <p>Type</p>\r\n                      <select onChange={this.onChange} name=\"type\" value ={this.state.type} id=\"Type\">\r\n                        <option value=\"current\" selected=\"selected\" label=\"current\">Current</option>\r\n                        <option value=\"saving\" label=\"saving\">Saving</option>\r\n                        <option value=\"credit\" label=\"credit\">Credit</option>\r\n                        <option value=\"joint\" label=\"joint\">Joint</option>\r\n                      </select>\r\n                        <p>Currency</p>\r\n                        <select id=\"currencyList\" name =\"currency\" onChange={this.onChange} value ={this.state.currency} >\r\n                            <option value=\"USD\" selected=\"selected\" label=\"US dollar\">USD</option>\r\n                            <option value=\"EUR\" label=\"Euro\">EUR</option>\r\n                            <option value=\"JPY\" label=\"Japanese yen\">JPY</option>\r\n                            <option value=\"GBP\" label=\"Pound sterling\">GBP</option>\r\n                            <option disabled>──────────</option>\r\n                            <option value=\"AED\" label=\"United Arab Emirates dirham\">AED</option>\r\n                            <option value=\"AFN\" label=\"Afghan afghani\">AFN</option>\r\n                            <option value=\"ALL\" label=\"Albanian lek\">ALL</option>\r\n                            <option value=\"AMD\" label=\"Armenian dram\">AMD</option>\r\n                            <option value=\"ANG\" label=\"Netherlands Antillean guilder\">ANG</option>\r\n                            <option value=\"AOA\" label=\"Angolan kwanza\">AOA</option>\r\n                            <option value=\"ARS\" label=\"Argentine peso\">ARS</option>\r\n                            <option value=\"AUD\" label=\"Australian dollar\">AUD</option>\r\n                            <option value=\"AWG\" label=\"Aruban florin\">AWG</option>\r\n                            <option value=\"AZN\" label=\"Azerbaijani manat\">AZN</option>\r\n                            <option value=\"BAM\" label=\"Bosnia and Herzegovina convertible mark\">BAM</option>\r\n                            <option value=\"BBD\" label=\"Barbadian dollar\">BBD</option>\r\n                            <option value=\"BDT\" label=\"Bangladeshi taka\">BDT</option>\r\n                            <option value=\"BGN\" label=\"Bulgarian lev\">BGN</option>\r\n                            <option value=\"BHD\" label=\"Bahraini dinar\">BHD</option>\r\n                            <option value=\"BIF\" label=\"Burundian franc\">BIF</option>\r\n                            <option value=\"BMD\" label=\"Bermudian dollar\">BMD</option>\r\n                            <option value=\"BND\" label=\"Brunei dollar\">BND</option>\r\n                            <option value=\"BOB\" label=\"Bolivian boliviano\">BOB</option>\r\n                            <option value=\"BRL\" label=\"Brazilian real\">BRL</option>\r\n                            <option value=\"BSD\" label=\"Bahamian dollar\">BSD</option>\r\n                            <option value=\"BTN\" label=\"Bhutanese ngultrum\">BTN</option>\r\n                            <option value=\"BWP\" label=\"Botswana pula\">BWP</option>\r\n                            <option value=\"BYN\" label=\"Belarusian ruble\">BYN</option>\r\n                            <option value=\"BZD\" label=\"Belize dollar\">BZD</option>\r\n                            <option value=\"CAD\" label=\"Canadian dollar\">CAD</option>\r\n                            <option value=\"CDF\" label=\"Congolese franc\">CDF</option>\r\n                            <option value=\"CHF\" label=\"Swiss franc\">CHF</option>\r\n                            <option value=\"CLP\" label=\"Chilean peso\">CLP</option>\r\n                            <option value=\"CNY\" label=\"Chinese yuan\">CNY</option>\r\n                            <option value=\"COP\" label=\"Colombian peso\">COP</option>\r\n                            <option value=\"CRC\" label=\"Costa Rican colón\">CRC</option>\r\n                            <option value=\"CUC\" label=\"Cuban convertible peso\">CUC</option>\r\n                            <option value=\"CUP\" label=\"Cuban peso\">CUP</option>\r\n                            <option value=\"CVE\" label=\"Cape Verdean escudo\">CVE</option>\r\n                            <option value=\"CZK\" label=\"Czech koruna\">CZK</option>\r\n                            <option value=\"DJF\" label=\"Djiboutian franc\">DJF</option>\r\n                            <option value=\"DKK\" label=\"Danish krone\">DKK</option>\r\n                            <option value=\"DOP\" label=\"Dominican peso\">DOP</option>\r\n                            <option value=\"DZD\" label=\"Algerian dinar\">DZD</option>\r\n                            <option value=\"EGP\" label=\"Egyptian pound\">EGP</option>\r\n                            <option value=\"ERN\" label=\"Eritrean nakfa\">ERN</option>\r\n                            <option value=\"ETB\" label=\"Ethiopian birr\">ETB</option>\r\n                            <option value=\"EUR\" label=\"EURO\">EUR</option>\r\n                            <option value=\"FJD\" label=\"Fijian dollar\">FJD</option>\r\n                            <option value=\"FKP\" label=\"Falkland Islands pound\">FKP</option>\r\n                            <option value=\"GBP\" label=\"British pound\">GBP</option>\r\n                            <option value=\"GEL\" label=\"Georgian lari\">GEL</option>\r\n                            <option value=\"GGP\" label=\"Guernsey pound\">GGP</option>\r\n                            <option value=\"GHS\" label=\"Ghanaian cedi\">GHS</option>\r\n                            <option value=\"GIP\" label=\"Gibraltar pound\">GIP</option>\r\n                            <option value=\"GMD\" label=\"Gambian dalasi\">GMD</option>\r\n                            <option value=\"GNF\" label=\"Guinean franc\">GNF</option>\r\n                            <option value=\"GTQ\" label=\"Guatemalan quetzal\">GTQ</option>\r\n                            <option value=\"GYD\" label=\"Guyanese dollar\">GYD</option>\r\n                            <option value=\"HKD\" label=\"Hong Kong dollar\">HKD</option>\r\n                            <option value=\"HNL\" label=\"Honduran lempira\">HNL</option>\r\n                            <option value=\"HKD\" label=\"Hong Kong dollar\">HKD</option>\r\n                            <option value=\"HRK\" label=\"Croatian kuna\">HRK</option>\r\n                            <option value=\"HTG\" label=\"Haitian gourde\">HTG</option>\r\n                            <option value=\"HUF\" label=\"Hungarian forint\">HUF</option>\r\n                            <option value=\"IDR\" label=\"Indonesian rupiah\">IDR</option>\r\n                            <option value=\"ILS\" label=\"Israeli new shekel\">ILS</option>\r\n                            <option value=\"IMP\" label=\"Manx pound\">IMP</option>\r\n                            <option value=\"INR\" label=\"Indian rupee\">INR</option>\r\n                            <option value=\"IQD\" label=\"Iraqi dinar\">IQD</option>\r\n                            <option value=\"IRR\" label=\"Iranian rial\">IRR</option>\r\n                            <option value=\"ISK\" label=\"Icelandic króna\">ISK</option>\r\n                            <option value=\"JEP\" label=\"Jersey pound\">JEP</option>\r\n                            <option value=\"JMD\" label=\"Jamaican dollar\">JMD</option>\r\n                            <option value=\"JOD\" label=\"Jordanian dinar\">JOD</option>\r\n                            <option value=\"JPY\" label=\"Japanese yen\">JPY</option>\r\n                            <option value=\"KES\" label=\"Kenyan shilling\">KES</option>\r\n                            <option value=\"KGS\" label=\"Kyrgyzstani som\">KGS</option>\r\n                            <option value=\"KHR\" label=\"Cambodian riel\">KHR</option>\r\n                            <option value=\"KID\" label=\"Kiribati dollar\">KID</option>\r\n                            <option value=\"KMF\" label=\"Comorian franc\">KMF</option>\r\n                            <option value=\"KPW\" label=\"North Korean won\">KPW</option>\r\n                            <option value=\"KRW\" label=\"South Korean won\">KRW</option>\r\n                            <option value=\"KWD\" label=\"Kuwaiti dinar\">KWD</option>\r\n                            <option value=\"KYD\" label=\"Cayman Islands dollar\">KYD</option>\r\n                            <option value=\"KZT\" label=\"Kazakhstani tenge\">KZT</option>\r\n                            <option value=\"LAK\" label=\"Lao kip\">LAK</option>\r\n                            <option value=\"LBP\" label=\"Lebanese pound\">LBP</option>\r\n                            <option value=\"LKR\" label=\"Sri Lankan rupee\">LKR</option>\r\n                            <option value=\"LRD\" label=\"Liberian dollar\">LRD</option>\r\n                            <option value=\"LSL\" label=\"Lesotho loti\">LSL</option>\r\n                            <option value=\"LYD\" label=\"Libyan dinar\">LYD</option>\r\n                            <option value=\"MAD\" label=\"Moroccan dirham\">MAD</option>\r\n                            <option value=\"MDL\" label=\"Moldovan leu\">MDL</option>\r\n                            <option value=\"MGA\" label=\"Malagasy ariary\">MGA</option>\r\n                            <option value=\"MKD\" label=\"Macedonian denar\">MKD</option>\r\n                            <option value=\"MMK\" label=\"Burmese kyat\">MMK</option>\r\n                            <option value=\"MNT\" label=\"Mongolian tögrög\">MNT</option>\r\n                            <option value=\"MOP\" label=\"Macanese pataca\">MOP</option>\r\n                            <option value=\"MRU\" label=\"Mauritanian ouguiya\">MRU</option>\r\n                            <option value=\"MUR\" label=\"Mauritian rupee\">MUR</option>\r\n                            <option value=\"MVR\" label=\"Maldivian rufiyaa\">MVR</option>\r\n                            <option value=\"MWK\" label=\"Malawian kwacha\">MWK</option>\r\n                            <option value=\"MXN\" label=\"Mexican peso\">MXN</option>\r\n                            <option value=\"MYR\" label=\"Malaysian ringgit\">MYR</option>\r\n                            <option value=\"MZN\" label=\"Mozambican metical\">MZN</option>\r\n                            <option value=\"NAD\" label=\"Namibian dollar\">NAD</option>\r\n                            <option value=\"NGN\" label=\"Nigerian naira\">NGN</option>\r\n                            <option value=\"NIO\" label=\"Nicaraguan córdoba\">NIO</option>\r\n                            <option value=\"NOK\" label=\"Norwegian krone\">NOK</option>\r\n                            <option value=\"NPR\" label=\"Nepalese rupee\">NPR</option>\r\n                            <option value=\"NZD\" label=\"New Zealand dollar\">NZD</option>\r\n                            <option value=\"OMR\" label=\"Omani rial\">OMR</option>\r\n                            <option value=\"PAB\" label=\"Panamanian balboa\">PAB</option>\r\n                            <option value=\"PEN\" label=\"Peruvian sol\">PEN</option>\r\n                            <option value=\"PGK\" label=\"Papua New Guinean kina\">PGK</option>\r\n                            <option value=\"PHP\" label=\"Philippine peso\">PHP</option>\r\n                            <option value=\"PKR\" label=\"Pakistani rupee\">PKR</option>\r\n                            <option value=\"PLN\" label=\"Polish złoty\">PLN</option>\r\n                            <option value=\"PRB\" label=\"Transnistrian ruble\">PRB</option>\r\n                            <option value=\"PYG\" label=\"Paraguayan guaraní\">PYG</option>\r\n                            <option value=\"QAR\" label=\"Qatari riyal\">QAR</option>\r\n                            <option value=\"RON\" label=\"Romanian leu\">RON</option>\r\n                            <option value=\"RON\" label=\"Romanian leu\">RON</option>\r\n                            <option value=\"RSD\" label=\"Serbian dinar\">RSD</option>\r\n                            <option value=\"RUB\" label=\"Russian ruble\">RUB</option>\r\n                            <option value=\"RWF\" label=\"Rwandan franc\">RWF</option>\r\n                            <option value=\"SAR\" label=\"Saudi riyal\">SAR</option>\r\n                            <option value=\"SEK\" label=\"Swedish krona\">SEK</option>\r\n                            <option value=\"SGD\" label=\"Singapore dollar\">SGD</option>\r\n                            <option value=\"SHP\" label=\"Saint Helena pound\">SHP</option>\r\n                            <option value=\"SLL\" label=\"Sierra Leonean leone\">SLL</option>\r\n                            <option value=\"SLS\" label=\"Somaliland shilling\">SLS</option>\r\n                            <option value=\"SOS\" label=\"Somali shilling\">SOS</option>\r\n                            <option value=\"SRD\" label=\"Surinamese dollar\">SRD</option>\r\n                            <option value=\"SSP\" label=\"South Sudanese pound\">SSP</option>\r\n                            <option value=\"STN\" label=\"São Tomé and Príncipe dobra\">STN</option>\r\n                            <option value=\"SYP\" label=\"Syrian pound\">SYP</option>\r\n                            <option value=\"SZL\" label=\"Swazi lilangeni\">SZL</option>\r\n                            <option value=\"THB\" label=\"Thai baht\">THB</option>\r\n                            <option value=\"TJS\" label=\"Tajikistani somoni\">TJS</option>\r\n                            <option value=\"TMT\" label=\"Turkmenistan manat\">TMT</option>\r\n                            <option value=\"TND\" label=\"Tunisian dinar\">TND</option>\r\n                            <option value=\"TOP\" label=\"Tongan paʻanga\">TOP</option>\r\n                            <option value=\"TRY\" label=\"Turkish lira\">TRY</option>\r\n                            <option value=\"TTD\" label=\"Trinidad and Tobago dollar\">TTD</option>\r\n                            <option value=\"TVD\" label=\"Tuvaluan dollar\">TVD</option>\r\n                            <option value=\"TWD\" label=\"New Taiwan dollar\">TWD</option>\r\n                            <option value=\"TZS\" label=\"Tanzanian shilling\">TZS</option>\r\n                            <option value=\"UAH\" label=\"Ukrainian hryvnia\">UAH</option>\r\n                            <option value=\"UGX\" label=\"Ugandan shilling\">UGX</option>\r\n                            <option value=\"USD\" label=\"United States dollar\">USD</option>\r\n                            <option value=\"UYU\" label=\"Uruguayan peso\">UYU</option>\r\n                            <option value=\"UZS\" label=\"Uzbekistani soʻm\">UZS</option>\r\n                            <option value=\"VES\" label=\"Venezuelan bolívar soberano\">VES</option>\r\n                            <option value=\"VND\" label=\"Vietnamese đồng\">VND</option>\r\n                            <option value=\"VUV\" label=\"Vanuatu vatu\">VUV</option>\r\n                            <option value=\"WST\" label=\"Samoan tālā\">WST</option>\r\n                            <option value=\"XAF\" label=\"Central African CFA franc\">XAF</option>\r\n                            <option value=\"XCD\" label=\"Eastern Caribbean dollar\">XCD</option>\r\n                            <option value=\"XOF\" label=\"West African CFA franc\">XOF</option>\r\n                            <option value=\"XPF\" label=\"CFP franc\">XPF</option>\r\n                            <option value=\"ZAR\" label=\"South African rand\">ZAR</option>\r\n                            <option value=\"ZMW\" label=\"Zambian kwacha\">ZMW</option>\r\n                            <option value=\"ZWB\" label=\"Zimbabwean bonds\">ZWB</option>\r\n                        </select>\r\n                      \r\n                      <button>Create</button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateAccount","import React, {Component} from 'react';\r\nimport './UpdateAccount.css'\r\nimport {Redirect } from 'react-router-dom'\r\nclass UpdateAccount extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n          redirect:false,\r\n          id:parseInt(props.match.params.id),\r\n          bank:'',\r\n          type:''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n      }\r\n      componentWillMount() {\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`{account(id:${this.state.id}){\r\n                bank\r\n                type\r\n            }}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            this.setState({\r\n              bank:data.data.account.bank,\r\n              type:data.data.account.type\r\n            })\r\n            console.log(this.state)\r\n\r\n        });\r\n      }\r\n      onSubmit(e){\r\n        e.preventDefault()\r\n          \r\n          fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({query:`mutation{updateAccount(id:${this.state.id},bank:\"${this.state.bank}\",type:\"${this.state.type}\"){\r\n              bank\r\n              type\r\n            }}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert(\"error\")\r\n                \r\n            }   \r\n            else{\r\n                alert(\"success\")\r\n            }\r\n        });\r\n      }\r\n      onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n        // console.log(this.state)\r\n    }\r\n    render(){\r\n        if(!sessionStorage.getItem('token'))\r\n        {\r\n            return (<Redirect to='/login'/>)\r\n        }\r\n        return (\r\n            <div >\r\n                <div className=\"login-page\">\r\n                  <div className=\"form\">\r\n\r\n                    <form className=\"login-form\" onSubmit={this.onSubmit}>\r\n                        <p>Bank</p>\r\n                      <select  onChange={this.onChange} value ={this.state.bank} name=\"bank\"  id=\"bankList\">\r\n                        <option value=\"cib\"label=\"cib\">CIB</option>\r\n                        <option value=\"qnb\" label=\"qnb\">QNB</option>\r\n                        <option value=\"hsbc\" label=\"hsbc\">HSBC</option>\r\n                      </select>\r\n                        <p>Type</p>\r\n                      <select  onChange={this.onChange} value ={this.state.type} name=\"type\" id=\"Type\">\r\n                        <option value=\"current\" label=\"current\">Current</option>\r\n                        <option value=\"saving\" label=\"saving\">Saving</option>\r\n                        <option value=\"credit\" label=\"credit\">Credit</option>\r\n                        <option value=\"joint\" label=\"joint\">Joint</option>\r\n                      </select>\r\n\r\n                      \r\n                      <button>Update</button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateAccount","import React, {Component} from 'react';\r\nimport './account.css'\r\nclass Account extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n        this.state={\r\n            bank:props.bank,\r\n            id:props.id,\r\n            type:props.type,\r\n            currency:props.currency,\r\n            balance:props.balance,\r\n            activated:props.activated\r\n        }\r\n        this.activatedButton = this.activatedButton.bind(this)\r\n        this.handleActivate = this.handleActivate.bind(this)\r\n        this.handleDeactivate = this.handleDeactivate.bind(this)\r\n      }\r\n    \r\n      handleActivate(){\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{activate(id:${this.state.id})}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n                this.setState({activated:true})\r\n\r\n        });\r\n      }\r\n      handleDeactivate(){\r\n\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{deactivate(id:${this.state.id})}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            \r\n                this.setState({activated:false})\r\n          \r\n\r\n            // this.setState({activated:data.activated})\r\n\r\n\r\n        });\r\n      }\r\n      activatedButton(){\r\n          if(this.state.activated)\r\n            return (<button onClick={this.handleDeactivate} id=\"activated\" >Activated</button>)\r\n           else\r\n            return (<button onClick={this.handleActivate} id=\"deactivated\">DeActivated</button>)\r\n      }\r\n    render(){\r\n        return (\r\n            <div >\r\n                <div className=\"account-container\">\r\n                    <p><b>Bank:</b><span>{this.state.bank}</span></p>\r\n                    <p><b>ID:</b><span>{this.state.id}</span></p>\r\n                    <p><b>Type:</b><span>{this.state.type}</span></p>\r\n                    <p><b>Currency:</b><span>{this.state.currency}</span></p>\r\n                    <p><b>Balance:</b><span>{this.state.balance}</span></p>\r\n                    {this.activatedButton()}\r\n                    \r\n                    <a href={'/update/'+this.state.id}><button >Update</button></a>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Account","import React, {Component} from 'react';\r\nimport './home.css'\r\nimport Account from './account/account'\r\nimport {Redirect } from 'react-router-dom'\r\nclass Home extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            redirect:false,\r\n            accounts:[],\r\n            filter:\"all\"\r\n        }\r\n        this.getAllaccount=this.getAllaccount.bind(this)\r\n        this.getByBank=this.getByBank.bind(this)\r\n        this.onChange=this.onChange.bind(this)\r\n      }\r\n\r\n      getAllaccount(){\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`{accounts{\r\n                id\r\n                balance\r\n                bank\r\n                type\r\n                currency\r\n                activated\r\n            }}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            let temp = data.data.accounts\r\n            this.setState({accounts:temp.slice()})\r\n            \r\n\r\n        });\r\n        // console.log(this.state)\r\n      }\r\n      componentWillMount(){\r\n\r\n        this.getAllaccount()\r\n      }\r\n      getByBank()\r\n      {\r\n\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`{accounts(bank:\"${this.state.filter}\"){\r\n                id\r\n                balance\r\n                bank\r\n                type\r\n                currency\r\n                activated\r\n            }}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            let temp = data.data.accounts\r\n            this.setState({accounts:temp.slice()})\r\n            \r\n\r\n        });\r\n      }\r\n      displayAccounts(){\r\n          return this.state.accounts.map(account=>{\r\n              return (<Account key={account.id} \r\n                               id={account.id} \r\n                               bank={account.bank}\r\n                               currency={account.currency}\r\n                               type={account.type}\r\n                               balance={account.balance}\r\n                               activated={account.activated} ></Account>)\r\n          })\r\n      }\r\n      onChange(e){\r\n        this.setState({[e.target.name]:e.target.value},function(){\r\n            if(e.target.value == \"all\")\r\n                this.getAllaccount()\r\n            else\r\n                this.getByBank()\r\n        }\r\n            )\r\n  \r\n      }\r\n    render(){\r\n        return (\r\n            <div >\r\n                \r\n                <span   className=\"custom-dropdown big\">\r\n                    <select onChange={this.onChange} value ={this.state.filter} name=\"filter\">    \r\n                        <option value=\"all\"  label=\"all\" >All</option>\r\n                        <option value=\"cib\"  label=\"cib\">CIB</option>  \r\n                        <option value=\"qnb\"  label=\"qnb\">QNB</option>\r\n                        <option value=\"hsbc\" label=\"hsbc\">HSBC</option>\r\n                    </select>\r\n                </span>\r\n        {       this.displayAccounts() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, {Component} from 'react';\r\nimport {Redirect } from 'react-router-dom'\r\nimport './transaction.css'\r\nclass Transaction extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            redirect:false,\r\n            id:props.id,\r\n            withdraws:props.withdraws,\r\n            deposits:props.deposits,\r\n            transfers:props.transfers\r\n          }\r\n          this.displayWithdraws = this.displayWithdraws.bind(this)\r\n          this.displayDeposits = this.displayDeposits.bind(this)\r\n          this.displayTransfers = this.displayTransfers.bind(this)\r\n          this.deleteTransaction = this.deleteTransaction.bind(this)\r\n          console.log(props)\r\n      }\r\n      deleteTransaction(){\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{deleteTransaction(transId:${this.state.id})}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert('error')\r\n                \r\n            }   \r\n            else{\r\n                if(data.data.deleteTransaction)\r\n                  alert(\"removed Transaction\")\r\n                else\r\n                  alert('error')\r\n            }\r\n        });\r\n      }\r\n\r\n      displayWithdraws(){\r\n\r\n        return this.state.withdraws.map(withdraw=>{\r\n            return (<p><b>Withdraw</b><span> From {withdraw.from}, <b>Balance</b> {withdraw.balance}</span></p>)\r\n        })\r\n      }\r\n      displayDeposits(){\r\n        return this.state.deposits.map(deposit=>{\r\n            return (<p><b>Deposit</b><span> From {deposit.to}, <b>Balance</b> {deposit.balance}</span></p>)\r\n        })\r\n      }\r\n      displayTransfers(){\r\n        return this.state.transfers.map(transfer=>{\r\n            return (<p><b>Transfer</b><span> From {transfer.from} To {transfer.to}, <b>Balance</b> {transfer.balance}</span></p>)\r\n        })\r\n      }\r\n    render(){\r\n        return (\r\n            <div >\r\n                <div className=\"account-container\">\r\n                    {/* <p><b>Withdraw</b><span> From 1, <b>Balance</b> 1003</span></p>\r\n                    <p><b>Deposit</b><span> To 4, <b>Balance</b> 1003</span></p>\r\n                    <p><b>Transfer</b><span>From 1 To 3, <b>Balance</b> 1003</span></p>\r\n     */}\r\n                    {this.displayDeposits()}\r\n                    {this.displayWithdraws()}\r\n                    {this.displayTransfers()}\r\n                    <button onClick={this.deleteTransaction}>Delete</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transaction","import React, {Component} from 'react';\r\nimport {Redirect } from 'react-router-dom'\r\nimport './transactions.css'\r\nimport Transaction from './transaction'\r\nclass Transactions extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            redirect:false,\r\n            from:\"2010-01-01\",\r\n            to:\"2030-01-01\",\r\n            transactions:[],\r\n            newID:-1\r\n          }\r\n          this.getAllTransactions= this.getAllTransactions.bind(this)\r\n          this.newTransaction= this.newTransaction.bind(this)\r\n          this.onChange=this.onChange.bind(this)\r\n          \r\n      }\r\n      newTransaction()\r\n      {\r\n        // alert(1)\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{newTransaction}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n          // alert(\"success\")\r\n            let NewId = data.data.newTransaction\r\n            this.setState({\r\n              newID:NewId,\r\n              redirect:true\r\n            })\r\n            \r\n\r\n        });\r\n        // console.log(this.state)\r\n      }\r\n      componentDidMount(){\r\n          this.getAllTransactions()\r\n      }\r\n      displayTransactions(){\r\n        return this.state.transactions.map(transaction=>{\r\n            return (<Transaction key={transaction.id} \r\n                             id={transaction.id} \r\n                             withdraws={transaction.withdraws}\r\n                             deposits={transaction.deposits}\r\n                             transfers={transaction.transfers} ></Transaction>)\r\n        })\r\n      }\r\n      getAllTransactions(){\r\n        console.log(this.state)\r\n        fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`{getTransactions(from:\"${this.state.from} 00:00:00\",to:\"${this.state.to} 23:59:59\"){\r\n                id\r\n                user_id\r\n                withdraws{\r\n                from\r\n                balance\r\n                }\r\n                deposits{\r\n                to\r\n                balance\r\n                }\r\n                transfers{\r\n                from\r\n                to \r\n                balance\r\n                }\r\n            }}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n          console.log(data)\r\n            let temp = data.data.getTransactions\r\n            this.setState({transactions:temp.slice()})\r\n            \r\n\r\n        });\r\n        // console.log(this.state)\r\n      }\r\n      componentDidMount(){\r\n          this.getAllTransactions()\r\n      }\r\n      // deleteTransaction(id)\r\n      // {\r\n        \r\n      //   for(let i =0;i<this.state.transactions.length;i++)\r\n      //   {\r\n      //     if(this.state.transactions[i].id == id)\r\n      //     {\r\n      //       this.state\r\n      //       break\r\n      //     }\r\n      //   }\r\n      // }\r\n      displayTransactions(){\r\n        return this.state.transactions.map(transaction=>{\r\n            return (<Transaction key={transaction.id} \r\n                             id={transaction.id} \r\n                             withdraws={transaction.withdraws}\r\n                             deposits={transaction.deposits}\r\n                             transfers={transaction.transfers} \r\n                             ></Transaction>)\r\n        })\r\n      }\r\n      onChange(e){\r\n        this.setState({[e.target.name]:e.target.value},function(){\r\n          this.getAllTransactions()})\r\n    }\r\n    render(){\r\n      if(this.state.redirect){\r\n        return (<Redirect to={'/new-transaction/'+this.state.newID}/>)\r\n      }\r\n        return (\r\n            <div >\r\n             <input   onChange={this.onChange} type=\"date\" id=\"date\" name=\"from\" value ={this.state.from}></input>\r\n         <input type=\"date\" id=\"date\" name=\"to\"\r\n      \r\n      value ={this.state.to} onChange={this.onChange}  >\r\n       </input>\r\n             <button className=\"new-transaction\"  onClick={this.newTransaction}>New Transaction</button>\r\n            \r\n              {this.displayTransactions() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transactions","import React, {Component} from 'react';\r\nimport {Redirect } from 'react-router-dom'\r\nimport './new_transaction.css'\r\nclass NewTransaction extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n          id:parseInt(props.match.params.id),\r\n          redirect:false,\r\n          depositTo:-1,\r\n          depositBalance:-1,\r\n          withdrawFrom:-1,\r\n          withdrawBalance:-1,\r\n          tranferFrom:-1,\r\n          transferTo:-1,\r\n          transferBalance:-1\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.AddDeposit =this.AddDeposit.bind(this)\r\n        this.AddWithdraw =this.AddWithdraw.bind(this)\r\n        this.AddTransfer =this.AddTransfer.bind(this)\r\n      }\r\n      onChange(e){\r\n        this.setState({[e.target.name]:e.target.value},console.log(this.state))\r\n\r\n    }\r\n    AddDeposit(e){\r\n      e.preventDefault();\r\n      fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{depositMoney(transId:${this.state.id},to:${this.state.depositTo},balance:\"${this.state.depositBalance}\")}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert('error')\r\n                \r\n            }   \r\n            else{\r\n              if(data.data.depositMoney==\"true\")\r\n                alert(\"added deposit!\")\r\n              else\r\n                alert(\"error\")\r\n            }\r\n        });\r\n    }\r\n    AddWithdraw(e){\r\n      e.preventDefault();\r\n      if(this.state.withdrawFrom==-1||this.state.withdrawBalance==-1)\r\n      {\r\n        alert(\"error\")\r\n        return\r\n      }\r\n      fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{withdrawMoney(transId:${this.state.id},from:${this.state.withdrawFrom},balance:\"${this.state.withdrawBalance}\")}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert('error')\r\n                \r\n            }   \r\n            else{\r\n                if(data.data.withdrawMoney==\"true\")\r\n                  alert(\"added withdraw!\")\r\n                else\r\n                  alert('error')\r\n            }\r\n        });\r\n    }\r\n    AddTransfer(e){\r\n      e.preventDefault();\r\n      if(this.state.transferTo==-1||this.state.transferBalance==-1||this.state.transferFrom==-1)\r\n      {\r\n        alert(\"error\")\r\n        return\r\n      }\r\n      fetch('/graphql', {\r\n            method: \"POST\",\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': 'Bearer '+sessionStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({query:`mutation{transferMoney(transId:${this.state.id},from:${this.state.transferFrom},to:${this.state.transferTo},balance:\"${this.state.withdrawBalance}\")}`})\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            console.log(data)\r\n            if(data.errors){\r\n                alert('error')\r\n            }   \r\n            else{\r\n                if(data.data.transferMoney==\"true\")\r\n                  alert(\"added transfer!\")\r\n                else\r\n                  alert(\"error\")\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div >\r\n                <div className=\"login-page\">\r\n                  <div className=\"form\">\r\n                    <form className=\"login-form\">\r\n                        <p>Deposit</p>\r\n\r\n                        <input type=\"number\" name=\"depositTo\"  onChange={this.onChange} placeholder=\"Deposit To {account id}\"/>\r\n                      <input type=\"number\" name=\"depositBalance\"  onChange={this.onChange} placeholder=\"Deposit balance in EGP\"/>\r\n                      <button className=\"Add\" onClick={this.AddDeposit}>Add deposit</button>\r\n                        <p>Withdraw</p>\r\n                      <input type=\"number\"  name=\"withdrawFrom\" onChange={this.onChange} placeholder=\"Withdraw From {account id}\"/>\r\n                      <input type=\"number\"  name=\"withdrawBalance\" onChange={this.onChange} placeholder=\"Withdraw balance in EGP\"/>\r\n                      <button className=\"Add\" onClick={this.AddWithdraw}>Add withdraw</button>\r\n                        <p>Transfer</p>\r\n                      <input type=\"number\" name=\"transferFrom\"   onChange={this.onChange} placeholder=\"Transfer From {account id}\"/>\r\n                      <input type=\"number\" name=\"transferTo\"  onChange={this.onChange} placeholder=\"Transfer To {account id}\"/>\r\n                      <input type=\"number\" name=\"transferBalance\"  onChange={this.onChange} placeholder=\"Transfer Balance in EGP\"/>\r\n                      <button className=\"Add\" onClick={this.AddTransfer}>Add Transfer</button>\r\n                      \r\n                      <button className=\"Finish\">Finish</button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTransaction   ","class Auth{\r\n\r\n    constructor(){\r\n        this.authnticated =false\r\n    }\r\n\r\n    login(cb){\r\n        this.authnticated = true\r\n        cb()\r\n    }\r\n    logout(cb){\r\n        this.authnticated = false\r\n        cb()\r\n    }\r\n    isAuthenticated(){\r\n        \r\n        if(sessionStorage.getItem('token'))\r\n            return true;\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default new Auth()","import React from 'react'\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport auth from './auth'\r\n\r\nexport const AuthRoute =  ({component:Component,...rest})=>{\r\n    return(\r\n        <Route {...rest} \r\n        render={props=>{\r\n            if(auth.isAuthenticated())\r\n            {\r\n                return <Component {...props}/>\r\n            }\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        } />\r\n    )\r\n}\r\n\r\nexport const NotAuthRoute=  ({component:Component,...rest})=>{\r\n    return(\r\n        <Route {...rest} \r\n        render={props=>{\r\n            if(!auth.isAuthenticated())\r\n            {\r\n                return <Component {...props}/>\r\n            }\r\n            return <Redirect to='/'/>\r\n        }\r\n\r\n        } />\r\n    )\r\n}","\nimport './App.css';\nimport Header from './components/header/header'\nimport Login from './components/login/login'\nimport Signup from './components/signup/signup'\nimport CreateAccount from './components/account/create/CreateAccount'\nimport UpdateAccount from './components/account/update/UpdateAccount'\nimport Home from './components/home/home'\nimport Transactions from './components/transaction/transactions'\nimport NewTransaction from './components/transaction/new_transaction'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {useQuery,gql} from '@apollo/client'\nimport {withRouter} from 'react-router'\nimport {AuthRoute,NotAuthRoute} from './protected.route'\nfunction App() {\n    \n    // const {loading ,error,data} = useQuery(GET_USR)\n    // console.log(data)\n    // fetch('/graphql', {\n    //         method: \"POST\",\n    //         headers: {\n    //           'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify({query:`{user(id:4){email} }`})\n    //       }\n    //     )\n    //     .then(response => response.json())\n    //     .then(data =>{\n    //         console.log(data.data.user)\n    //     });\n    return ( \n        \n    <Router>\n        <div className = \"App\">\n            <Header></Header> \n            <Switch>\n                <AuthRoute path='/' exact component={Home}/>\n                <NotAuthRoute path='/login' exact  component={Login}/>\n                <NotAuthRoute path='/signup' exact component={Signup}/>\n                <AuthRoute path='/create-account' exact component={CreateAccount}/>\n                <AuthRoute path='/update/:id' exact component={UpdateAccount}/>\n                <AuthRoute path='/transactions' exact component={Transactions}/>\n                <AuthRoute path='/new-transaction/:id' exact component={NewTransaction}/>\n                \n            </Switch>\n    \n    \n        </div>\n    </Router>\n\n        \n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloClient, ApolloProvider, InMemoryCache,HttpLink } from '@apollo/client';\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link:new HttpLink({\n    uri: '/graphql-playground'\n  })\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}